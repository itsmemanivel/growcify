{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/category/category.component.html","./src/app/category/category.component.ts","./src/app/api.service.ts","./src/main.ts","./src/app/products/products.component.html","./src/app/products/products.component.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Growcify';\n  \n  constructor() {}\n\n}\n","<nav class=\"navbar navbar-light bg-light\">\n  <a class=\"navbar-brand\" href=\"#\">\n    <img style=\"border-radius: 50%;\" src=\"https://is2-ssl.mzstatic.com/image/thumb/Purple114/v4/0d/a7/73/0da77304-8a89-38a8-98c8-41169d6b0e24/source/512x512bb.jpg\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n    <strong style=\"margin-left: 10%;\">Growcify</strong>\n  </a>\n</nav>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatListModule} from '@angular/material/list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \n\n\nimport { AppComponent } from './app.component';\nimport { ProductsComponent } from './products/products.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CategoryComponent } from './category/category.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'category',  pathMatch: 'full' },\n  { path: 'category', component: CategoryComponent },\n  { path: 'products/:id', component: ProductsComponent },\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    CategoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatListModule,\n    HttpClientModule,\n    MatCardModule,\n    MatExpansionModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(routes) \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!-- Image and text -->\n\n  <div class=\"container\">\n    <div class=\"category-list\" >\n      <div  *ngFor=\"let item of categorys;\" >\n        <a *ngIf=\"item.parent\" style=\"display: none;width: 0px;\"><mat-card class=\"category\">{{item.parent.name}}</mat-card></a>\n        <div style=\"margin: 10%;\">\n          <a *ngIf=\"!item.parent\"  (click)=\"navigate(item._id)\"><mat-card class=\"category\">{{item.name}}</mat-card></a>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service'\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  panelOpenState = false;\n\n  categorys: any = [];\n  products: any = [];\n  constructor(private api: ApiService, private router: Router){ }\n\n  ngOnInit(): void {\n    this.api.getCategory().subscribe(data =>{\n      this.categorys = data;\n      console.log(this.categorys)\n    })\n  }\n\n  navigate(id: string){\n    this.router.navigate(['/products/'+id]);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  \n  localUrl = 'https://api.growcify.com/dev/';\n\n  constructor(private http: HttpClient) {\n    \n   }\n\n   getCategory() {\n    return this.http.get(this.localUrl+'category/list');\n  }\n\n  getProducts() {\n    return this.http.get(this.localUrl+'/product/list/');\n  }\n\n  getProductsById(id: String){\n    return this.http.get(this.localUrl+'/product/list/'+id);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","<div class=\"container\">\n    <div class=\"category-list\" >\n      <div  *ngFor=\"let item of products;\" >\n        <!-- <a *ngIf=\"item.parent\" style=\"display: none;width: 0px;\"><mat-card class=\"category\">{{item.parent.name}}</mat-card></a> -->\n        <div *ngIf=\"item.name\" style=\"margin: 10%;\">\n          <a><mat-card class=\"category\">{{item.name}}</mat-card></a>\n        </div>\n      </div>\n\n      <div *ngIf=\"noProducts\" style=\"margin: 10%;\">\n        <a><mat-card style=\" width:100%;background-color:red;color:white\">No Products Found!!!</mat-card></a>\n    </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { ApiService } from '../api.service'\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  id:any;\n  products:any =[];\n  noProducts: boolean = false;\n  constructor(private route: ActivatedRoute, private api: ApiService){}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.api.getProductsById(this.id).subscribe(data =>{\n        this.products = data;\n        console.log(this.products.length);\n        if(this.products.length == 0){\n          this.noProducts = true;\n        } else {\n          this.noProducts = false;\n        }\n      });      \n  });\n  }\n\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}